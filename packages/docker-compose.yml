version: "3"

networks:
  laravel:

services:
  #Admin app
  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: admin-panel
    command: npm run dev
    ports:
      - "3000:3000"
    volumes:
      - "./admin-panel:/usr/src/app"

  #Laravel API webserver
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./laravel-api:/var/www/html
      - ./laravel-api/.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  #MySQL Service
  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  #PHP Service
  php:
    build:
      context: ./laravel-api
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./laravel-api:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  #Composer Service
  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./laravel-api:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel

  #Npm Service
  npm:
    image: node:lts-slim
    container_name: npm
    volumes:
      - ./laravel-api:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]

  #Artisan Service
  artisan:
    build:
      context: ./laravel-api
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./laravel-api:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ["/var/www/html/artisan"]
    networks:
      - laravel
